# ==================================
# 애플리케이션 정보 (Application Info)
# ==================================
spring.application.name=nexus

# ==================================
# 서버 설정 (Server Configuration)
# ==================================
# .env 파일의 SERVER_PORT 값을 사용하며, 없으면 8080을 기본값으로 사용합니다.
server.port=${SERVER_PORT:8080}

# ==================================
# 데이터베이스 연결 설정 (Database Configuration)
# ==================================
# .env 파일에 정의된 변수들을 사용하여 데이터베이스에 연결합니다.
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
# PostgreSQL JDBC 드라이버를 명시적으로 지정해줍니다.
spring.datasource.driver-class-name=org.postgresql.Driver

# ==================================
# JPA 및 Hibernate 설정 (JPA & Hibernate)
# ==================================
# 애플리케이션 실행 시 Entity를 기준으로 데이터베이스 테이블을 자동으로 업데이트합니다.
spring.jpa.hibernate.ddl-auto=update
# 실행되는 SQL 쿼리를 로그에 표시하여 디버깅을 돕습니다.
spring.jpa.show-sql=true
# 데이터베이스 종류가 PostgreSQL임을 명시합니다.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ==================================
# 로깅 설정 (Logging Configuration)
# ==================================
logging.level.root=INFO
# 우리가 만든 com.nexus 패키지 하위의 로그는 더 상세하게(DEBUG) 봅니다.
logging.level.com.nexus=DEBUG
# Spring Security 로깅 (개발 환경에서만)
logging.level.org.springframework.security=DEBUG
# SQL 로깅 (개발 환경에서만)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# 로그 파일 설정
logging.file.name=logs/nexus.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30

# ==================================
# JWT (HMAC) 설정
# ==================================
# 대칭키 기반 서명 사용. 운영환경에서는 강력한 키를 환경변수 JWT_SECRET_KEY 로 주입하세요.
jwt.secret=${JWT_SECRET_KEY:dev-secret}

# ==================================
# Actuator 모니터링 설정
# ==================================
# 모든 actuator 엔드포인트 활성화 (개발 환경)
management.endpoints.web.exposure.include=*
# actuator 엔드포인트 기본 경로
management.endpoints.web.base-path=/actuator
# health 엔드포인트 상세 정보 표시
management.endpoint.health.show-details=always
# 애플리케이션 정보 표시
management.info.env.enabled=true

# 애플리케이션 정보
info.app.name=Nexus - LoL Custom Platform
info.app.description=League of Legends custom game platform
info.app.version=@project.version@

# ==================================
# 보안 설정 (Security Configuration)
# ==================================
# JWT 토큰 만료 시간 (초)
jwt.access-token-expiration=604800
jwt.refresh-token-expiration=2592000

# 암호화 키 (운영환경에서는 환경변수로 설정)
encryption.key=${ENCRYPTION_KEY:}

# CORS 허용 도메인
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# SSL 설정
server.ssl.enabled=${SSL_ENABLED:false}
app.domain=${APP_DOMAIN:localhost}

# Rate Limiting 설정
rate-limit.enabled=true
rate-limit.general-requests-per-minute=60
rate-limit.auth-requests-per-minute=10
rate-limit.sensitive-requests-per-minute=5

# ==================================
# OAuth2 설정 (OAuth2 Configuration)
# ==================================
# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Discord OAuth2
spring.security.oauth2.client.registration.discord.client-id=${DISCORD_CLIENT_ID:}
spring.security.oauth2.client.registration.discord.client-secret=${DISCORD_CLIENT_SECRET:}
spring.security.oauth2.client.registration.discord.client-name=Discord
spring.security.oauth2.client.registration.discord.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.discord.scope=identify,email
spring.security.oauth2.client.registration.discord.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Discord Provider
spring.security.oauth2.client.provider.discord.authorization-uri=https://discord.com/api/oauth2/authorize
spring.security.oauth2.client.provider.discord.token-uri=https://discord.com/api/oauth2/token
spring.security.oauth2.client.provider.discord.user-info-uri=https://discord.com/api/users/@me
spring.security.oauth2.client.provider.discord.user-name-attribute=id

# ==================================
# 이메일 설정 (Email Configuration)
# ==================================
# Gmail SMTP 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USERNAME:}
spring.mail.password=${GMAIL_APP_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# 이메일 발신자 정보
app.email.from=${EMAIL_FROM:noreply@nexus.com}
app.email.name=${EMAIL_NAME:Nexus Platform}